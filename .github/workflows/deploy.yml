# .github/workflows/deploy.yml
name: Deploy SvelteKit to GitHub Pages

on:
  push:
    branches: [main] # Make sure this matches your default branch (e.g., 'main' or 'master')
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json

      # We can keep this for extra robustness, though npm install handles existing node_modules better
      - name: Clean node_modules (for troubleshooting optional dependency issues)
        run: rm -rf node_modules
        continue-on-error: true

      - name: Install dependencies
        run: npm install # <--- CHANGED: Use 'npm install' instead of 'npm ci'

      - name: Build SvelteKit app
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: sveltekit

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4